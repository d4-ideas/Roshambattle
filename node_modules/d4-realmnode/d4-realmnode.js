var mongoose = require('mongoose');
var schema = new mongoose.Schema({
    createdDate: { type: Date, default: Date.now },
    user: {type: mongoose.Schema.Types.ObjectId, ref: 'user'}, 
    description: String,
    resources: {/*tobedefined*/},
    type: {/*tobedefined*/}
});
var model = mongoose.model('node', schema);
exports.schema = schema;
exports.model = model;

//************************************************************************************************************
// function     : d4-realmnode.addNode()
// developer    : Rob
// developed on : 8/2/2014
// arguments    : {user}
//************************************************************************************************************
exports.addNode = function(node, callback){
    if ((typeof node.user != 'undefined') && (node.user != null)){
        var newNode = {user: node.user, description: 'A lonely and desolate place'};
        model.create(newNode, function(err, data){
            if (err)
                callback({error:err}, undefined);
            else
                callback(undefined, data);
        });
    } else
        callback ({error:'Giving me a user might help'}, undefined);
};

//************************************************************************************************************
// function     : d4-realmnode.updateNode()
// developer    : Rob
// developed on : 8/2/2014
// arguments    : {nodeID, user, description}
//************************************************************************************************************
exports.updateNode = function(node, callback){
    if (node.nodeID){
        var update = {};
        if (node.user)
            update.user = node.user;
        if (node.description)
            update.description = node.description;
        
        model.findOneAndUpdate({_id:node.nodeID}, update, function(err, data) {
            if (err)
                callback ({error:err}, undefined);
            else
                callback(undefined, data);
        });
    } else
        callback ({error:'Giving me a user might help'}, undefined);
};