var mongoose = require('mongoose');
var schChat = new mongoose.Schema({
    chatDate: Date,
    user: {type: mongoose.Schema.Types.ObjectId, ref: 'user'}, 
    comments: String,
    pluses:[{type: mongoose.Schema.Types.ObjectId, ref: 'user'}],
    minuses:[{type: mongoose.Schema.Types.ObjectId, ref: 'user'}]
});
var modChat = mongoose.model('chat', schChat);
exports.schema = schChat;
exports.model = modChat;

//************************************************************************************************************
// function     : d4-chat.addChat
// developer    : Rob
// developed on : 7/14/2014
// arguments    : chat object {user, commments} - user is a userid
//************************************************************************************************************
exports.addChat = function(chat, callback){
    if (chat.user){
        chat.chatDate = new Date();
        modChat.create(chat, function(err, newChat){
            if (err)
                callback({error:err}, undefined);
            else
                callback(undefined, newChat);
        });
    } else
        callback({error:'A user is required for the chat.'}, undefined);
}

//************************************************************************************************************
// function     : d4-chat.getChats
// developer    : Rob
// developed on : 7/14/2014
// arguments    : turnQuery object {startDate, numberOfChats}
//                callback function (error, [turnDate]) 
//************************************************************************************************************
exports.getChats = function(turnQuery, callback){
    if(typeof turnQuery != 'undefined'){
        var query = modChat.find().sort('chatDate');
        
        if(typeof turnQuery.startDate != 'undefined'){
            query.where('chatDate').lt(turnQuery.startDate);
        }
        if(typeof turnQuery.numberOfChats != 'undefined'){
            query.batchSize(turnQuery.numberOfChats);
        }
            
        query.populate('user');
        query.find(function(err, chats){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(chats){
                return callback(undefined, chats);
            }
        });
    }
    else{
        return callback({'error': 'Your turnQuery is undefined... bitch.'}, undefined);
    }
}

//************************************************************************************************************
// function     : d4-chat.addPlus
// developer    : Rob
// developed on : 7/17/2014
// arguments    : plus object {chatID, userID}
//                callback function (error, plusCount) 
//************************************************************************************************************
exports.addPlus = function(plus, callback){
    if (typeof plus != 'undefined' &&
        typeof plus.chatID != 'undefined' &&
        typeof plus.userID != 'undefined'){

        var query = modChat.findOneAndUpdate({_id: plus.chatID, user:{$ne:plus.userID}, pluses: {$nin:[plus.userID]}}, { $push: {pluses: plus.userID} }, {new:true}, function (err, data){
            if (err)
                return callback({error: err}, undefined);
            else{
                if(data)
                    return callback(undefined, data);
                else
                    return callback({error:'stop trying to pat yourself on the back'}, undefined);
            }
        });
        
    } else{
        return callback({'error': 'Your plus is undefined... bitch.'}, undefined);
    }
}

//************************************************************************************************************
// function     : d4-chat.addPlus
// developer    : Rob
// developed on : 7/17/2014
// arguments    : minus object {chatID, userID}
//                callback function (error, minusCount) 
//************************************************************************************************************
exports.addMinus = function(minus, callback){
    if (typeof minus != 'undefined' &&
        typeof minus.chatID != 'undefined' &&
        typeof minus.userID != 'undefined'){

        var query = modChat.findOneAndUpdate({_id: minus.chatID, user:{$ne:minus.userID}, minuses: {$nin:[minus.userID]}}, { $push: {minuses: minus.userID} }, {new:true}, function (err, data){
            if (err)
                return callback({error: err}, undefined);
            else{
                if(data)
                    return callback(undefined, data);
                else
                    return callback({error:'stop trying to pat yourself on the back'}, undefined);
            }
        });
        
    } else{
        return callback({'error': 'Your minus is undefined... bitch.'}, undefined);
    }    
}