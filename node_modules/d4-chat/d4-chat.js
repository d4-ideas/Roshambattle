var mongoose = require('mongoose');
var schChat = new mongoose.Schema({
    chatDate: Date,
    user: {type: mongoose.Schema.Types.ObjectId, ref: 'user'}, 
    comments: String
});
var modChat = mongoose.model('chat', schChat);
exports.schema = schChat;
exports.model = modChat;

//************************************************************************************************************
// function     : d4-chat.addChat
// developer    : Rob
// developed on : 7/14/2014
// arguments    : chat object {user, commments} - user is a userid
//************************************************************************************************************
exports.addChat = function(chat, callback){
    if (chat.user){
        chat.chatDate = new Date();
        modChat.create(chat, function(err, newChat){
            if (err)
                callback({error:err}, undefined);
            else
                callback(undefined, newChat);
        });
    } else
        callback({error:'A user is required for the chat.'}, undefined);
}

//************************************************************************************************************
// function     : d4-chat.getChats
// developer    : Rob
// developed on : 7/14/2014
// arguments    : turnQuery object {startDate, numberOfChats}
//                callback function (error, [turnDate]) 
//************************************************************************************************************
exports.getChats = function(turnQuery, callback){
    if(typeof turnQuery != 'undefined'){
        var query = modChat.find().sort('-chatDate');
        
        if(typeof turnQuery.startDate != 'undefined'){
            query.where('chatDate').lt(turnQuery.startDate);
        }
        if(typeof turnQuery.numberOfChats != 'undefined'){
            query.batchSize(turnQuery.numberOfChats);
        }
            
        query.find(function(err, chats){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(chats){
                return callback(undefined, chats);
            }
        });
    }
    else{
        return callback({'error': 'Your turnQuery is undefined... bitch.'}, undefined);
    }
}