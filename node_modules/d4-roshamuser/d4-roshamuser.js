var mongoose = require('mongoose');
var weaponTypes = ['Rock','Scissors','Paper'];
var roshamuserSchema = new mongoose.Schema({
    userid:  mongoose.Schema.Types.ObjectId, 
    weapon: {type: String, enum: weaponTypes},
    totalBattles: Number,
    totalWins: Number,
    totalLosses: Number,
    totalTies: Number
});
var roshamuserModel = mongoose.model('roshamuser', roshamuserSchema);
exports.roshamuserModel = roshamuserModel;

 
//************************************************************************************************************
// function     : d4-roshamuser.setWeapon
// developer    : Kai
// developed on : 5/18/2014
// arguments    : user object {userid, weapon}
//                callback function (error, boolean)
//************************************************************************************************************
exports.setWeapon = function(user, callback){
    if(user){
        var query = roshamuserModel.findOne({}).where('userid').equals(user.userid);
        query.exec(function(err, foundUser){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(foundUser){
                foundUser.weapon = user.weapon;
                
                foundUser.save(function(err){
                    if (err){
                        return callback({'error': err}, undefined);
                    }
                    else return callback(undefined, true);
                });
            }
            else{
                newUser = new roshamuserModel({'userid': user.userid,
                                               'weapon': user.weapon,
                                               'totalBattles': 0,
                                               'totalWins': 0,
                                               'totalLosses': 0,
                                               'totalTies': 0});
                newUser.save(function(err){
                    if (err){
                        return callback({'error': err}, undefined);
                    }
                    else return callback(undefined, true);
                });
            }
        });
    }
    else{
        return callback({'error': 'You really must provide a user if this is going to work.'}, undefined);
    }
};

//************************************************************************************************************
// function     : d4-roshamuser.getRoshamUser
// developer    : Kai
// developed on : 5/19/2014
// arguments    : userid
//                callback function (error, roshamuser) 
//************************************************************************************************************
exports.getRoshamUser = function(userid, callback){
    if(userid){
        var query = roshamuserModel.findOne({}).where('userid').equals(userid);
        query.select('userid weapon totalBattles totalWins totalLosses totalTies');
        query.exec(function(err, foundUser){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(foundUser){
                return callback(undefined, foundUser);
            }
            else{
                return callback({'error': 'No roshamuser returned. Perhaps a weapon has not been set for this user before?'}, undefined);
            }
        });
    }
    else{
        return callback({'error': 'You really must provide a user if this is going to work.'}, undefined);
    }    
};

//************************************************************************************************************
// function     : d4-roshamuser.logBattle
// developer    : Kai
// developed on : 5/26/2014
// arguments    : user object {userid, result}
//                callback function (error) 
//************************************************************************************************************
exports.logBattle = function(user, callback){
    if(user){
        var query = roshamuserModel.findOne({}).where('userid').equals(user.userid);
        query.exec(function(err, foundUser){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(foundUser){
                foundUser.weapon = undefined;
                foundUser.totalBattles += 1;
                switch(user.result){
                    case 'Win':
                        foundUser.totalWins += 1;
                        break;
                    case 'Tie':
                        foundUser.totalTies += 1;
                        break;
                    case 'Loss':
                        foundUser.totalLosses += 1;
                        break;
                }
                
                foundUser.save(function(err){
                    if(err){
                        return callback({'error': err}, undefined);
                    }
                    else{
                        return callback(undefined, true);
                    }
                });
            }
            else{
                return callback({'error': 'I do not think you are who you think you are.'}, undefined);
            }
        });
    }
    else{
        return callback({'error': 'You really must provide a user if this is going to work.'}, undefined);
    }    
};