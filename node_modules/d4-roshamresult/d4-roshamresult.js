var mongoose = require('mongoose');
var weaponTypes = ['Rock','Scissors','Paper'];
var schResult = new mongoose.Schema({
    turnDate: Date,
    player1: {type: mongoose.Schema.Types.ObjectId, ref: 'user'}, 
    weapon1: {type: String, enum: weaponTypes},
    player2: {type: mongoose.Schema.Types.ObjectId, ref: 'user'}, 
    weapon2: {type: String, enum: weaponTypes},
    winner: Number
});
var modResult = mongoose.model('result', schResult);
exports.schema = schResult;
exports.model = modResult;

function whoWins(weapon1, weapon2){
    var weaponVal1 = weaponTypes.indexOf(weapon1);
    var weaponVal2 = weaponTypes.indexOf(weapon2);
    var battleSum = weaponVal1 + weaponVal2;
    
    if(weaponVal1 === weaponVal2) return 0;
    if(weaponVal1 > weaponVal2){
        if(battleSum === 2) return 1;
        else return 2;
    }
    else{
        if(battleSum === 2) return 2;
        else return 1;
    }
};

//************************************************************************************************************
// function     : d4-roshamresult.logResult
// developer    : Kai
// developed on : 5/19/2014
// arguments    : battle object {turnDate, player1, weapon1, player2, weapon2} - player 1 and 2 are userids
//************************************************************************************************************
exports.logResult = function(battle, callback){
    var roshamuser = require('d4-roshamuser');
    
    if(!battle){
        return callback({'error': 'What battle you talkin bout?'}, undefined);
    };
    if (!battle.turnDate){
        return callback({'error': 'When was this epic battle of yours?'}, undefined);
    };
    if ((!battle.player1)||(!battle.player2)||(!battle.weapon1)||(!battle.weapon2)){
        return callback({'error': 'This battle is Borked!'}, undefined);
    };
    
    battle.winner = whoWins(battle.weapon1, battle.weapon2);
      
    modResult.create(battle, function(err, newResult){
        if(err){
            return callback({'error': err}, undefined);
        };
        var result1,
            result2,
            resultCount = 0;
        switch(newResult.winner){
            case 0:
                result1 = 'Tie';
                result2 = 'Tie';
                break;
            case 1:
                result1 = 'Win';
                result2 = 'Loss';                
                break;
            case 2:
                result1 = 'Loss';
                result2 = 'Win';
                break;
        }
        var returnResult = function(err, result){
            if (result){
                resultCount++;
                if (resultCount === 2)
                    return callback(undefined, newResult);   
            }
            else
                return callback({'error': 'No can log battle: ' + err.error}, undefined);
        }
        roshamuser.logBattle({'userid':newResult.player1, 'result':result1}, returnResult);
        roshamuser.logBattle({'userid':newResult.player2, 'result':result2}, returnResult);
    });    
}


//************************************************************************************************************
// function     : d4-roshamresults.getTurnResults
// developer    : Kai
// developed on : 6/5/2014
// arguments    : turnQuery object {turnDate, startDate, endDate, userID}
//                callback function (error, [results]) 
//************************************************************************************************************
exports.getTurnResults = function(turnQuery, callback){
    if(typeof turnQuery != 'undefined'){
        var query = modResult.find().where('turnDate').equals(turnQuery.turnDate);
        if(typeof turnQuery.turnDate != 'undefined'){
            query.where('turnDate').equals(turnQuery.turnDate);
        }
        else{
            if(typeof turnQuery.startDate != 'undefined'){
                query.where('turnDate').gte(turnQuery.startDate);
            }
            if(typeof turnQuery.endDate != 'undefined'){
                query.where('turnDate').lte(turnQuery.endDate);
            }
        }
        if(typeof turnQuery.userID != 'undefined'){
            query.or([{'player1': turnQuery.userID},{'player2': turnQuery.userID}]);
        }
        
        query.populate('player1', 'name');
        query.populate('player2', 'name');
            
        query.find(function(err, foundResults){
            if(err){
                return callback({'error': err}, undefined);
            }
            if(foundResults){
                return callback(undefined, foundResults);
            }
        });
    }
    else{
        return callback({'error': 'Your turnQuery is undefined... bitch.'}, undefined);
    }
}

//************************************************************************************************************
// function     : d4-roshamresults.getUserTurnResults
// developer    : Kai
// developed on : 6/12/2014
// arguments    : turnQuery object {turnDate, userID}
//                callback function (error, resultobject {turnDate, userID, weapon, [opponents{name, result}]) 
//************************************************************************************************************
exports.getUserTurnResults = function(turnQuery, callback){
    getTurnResults(turnQuery, function(err, foundResults){
        if(err){
            return callback({'error': err.error}, undefined);
        }
        console.log(typeof turnQuery);
        if((typeof turnQuery === 'array')&&(turnQuery.length > 0)){
            
        
        }
        else{
            return callback(undefined, undefined);
        }
    });
};