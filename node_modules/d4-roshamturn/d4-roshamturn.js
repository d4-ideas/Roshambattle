var mongoose = require('mongoose');
var weaponTypes = ['Rock','Scissors','Paper'];
var schTurn = new mongoose.Schema({
    turnDate: Date,
    participants: [{userid: mongoose.Schema.Types.ObjectId, 
                    weapon: {type: String, enum: weaponTypes}}]
});
var modTurn = mongoose.model('turn', schTurn);

function findParticipant(participants, user){
    var index = 0;
    while(index < participants.length){
        if(participants[index].userid == user)
            return index
        index++;
    }
    return -1;
}

//************************************************************************************************************
// function     : d4-roshamturn.takeTurn
// developer    : Kai
// developed on : 5/19/2014
// arguments    : turn object {userid, weapon}
//                callback function (error, boolean)
//************************************************************************************************************
exports.takeTurn = function(turn, callback){
    if(!turn){
        return callback({'error': 'What turn you talkin bout?'}, undefined);
    }
    if (!turn.userid){
        return callback({'error': 'Who is taking this turn anyway?'}, undefined);
    }
    if((!turn.weapon)||(weaponTypes.indexOf(turn.weapon) < 0)){
        return callback({'error': 'Please provide a weapon that might actually do some harm.'}, undefined);
    }

    var user = require('d4-user');
    user.validateUser({'_id':turn.userid}, function(err, found){
        if (err){
            return callback({'error': err}, undefined);
        }
        if (found){
            var query = modTurn.findOne().where('turnDate').equals(undefined);
            query.exec(function(err, curTurn){
                if(err){
                    return callback({'error': err}, undefined);
                }
                if(curTurn){
                    var userindex = findParticipant(curTurn.participants, turn.userid);
                    if(userindex < 0){
                        curTurn.participants.push(turn); 
                        console.log('turn exist, user does not');
                    }
                    else{
                        curTurn.participants[userindex].weapon = turn.weapon;
                        console.log('turn and user exist');
                    }
                    curTurn.save(function(err){
                        if(err)
                            return callback({'error': err}, undefined);
                        
                        return callback(undefined, true);
                    });
                }
                else{
                    modTurn.create({'turnDate': undefined, 
                                    'participants': [{'userid':turn.userid, 
                                                      'weapon':turn.weapon}]}, function(err, newTurn){
                        if(err){
                            return callback({'error': err}, undefined);
                        }
                        console.log('turn does not exist');
                        return callback(undefined, true);
                                                          
                    });
                }
            });
        }
        else{
            return callback({'error': 'Who is taking this turn anyway?'}, undefined);
        }
    });    
}